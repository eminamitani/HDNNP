# -*- coding: utf-8 -*-

###########################################################
#
# this is settings file.
# copy this file to 'settings.py', and edit it.
#
###########################################################

from mpi4py import MPI
import chainermn
from skopt.space import *
from skopt.callbacks import *
from modules.argparser import get_parser
from modules.skopt_callbacks import SamePointStopper

import matplotlib as mpl

mpl.use('Agg')
mpl.rc('font', size=20)

args = vars(get_parser())

file = dict(
    xyz_file='GaN/debug_test/GaN.xyz',
    config=['CrystalGa2N2', 'CrystalGa16N16'],
    out_dir='output',
    test_dir='test',
)

mpi = dict(
    comm=MPI.COMM_WORLD,
    rank=MPI.COMM_WORLD.Get_rank(),
    size=MPI.COMM_WORLD.Get_size(),
    gpu=-1,
    chainer_comm=chainermn.create_communicator('naive', MPI.COMM_WORLD),
)

sym_func = dict(
    Rc=[5.0],
    eta=[0.01, 0.1, 1.0],
    Rs=[2.0, 3.2, 3.8],
    lambda_=[-1, 1],
    zeta=[1, 2, 4],
)

model = dict(
    epoch=10,
    batch_size=5,
    preproc='pca',
    input_size=20,
    init_lr=1.0e-3,
    final_lr=1.0e-5,
    lr_decay=0.0e-3,
    mixing_beta=1.0,
    l1_norm=0.0e-4,
    l2_norm=0.0e-4,
    layer=[
        {'node': 30, 'activation': 'tanh'},
        {'node': 30, 'activation': 'tanh'},
        {'node': 1, 'activation': 'identity'},
    ],
    metrics='validation/main/tot_RMSE',
)

skopt = dict(
    kfold=2,
    init_num=5,
    max_num=10,
    space=[
        Real(1.0e-4, 1.0e-2, prior='log-uniform', name='init_lr'),
        Real(1.0e-6, 1.0e-4, prior='log-uniform', name='final_lr'),
        Real(1.0e-6, 1.0e-3, prior='log-uniform', name='lr_decay'),
        # Integer(50, 200, prior='uniform', name='batch_size'),
        # Categorical(['pca', None], name='preproc')
    ],
    acq_func='LCB',
    callback=[
        SamePointStopper(),
        DeltaYStopper(1.0e-3, n_best=3),
    ],
)

